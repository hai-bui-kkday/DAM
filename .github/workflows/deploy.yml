name: SIT Server
on:
  pull_request:
    branches: develop
    types: [opened, synchronize, closed]
  schedule:
    - cron:  '0 * * * *'
jobs:
  deploy:
    runs-on: self-hosted
    env:
      APP_NAME: ${{ secrets.APP_NAME }}
    steps:
    - uses: actions/checkout@v2
    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"
    - name: Cache composer dependencies
      uses: actions/cache@v1
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        # Use composer.json for key, if composer.lock is not committed.
        # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-
    # - name: Install Composer dependencies
    #   run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader
    - name: Install Composer dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist --optimize-autoloader
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Prepare the application
      run: |
        php -r "file_exists('.env') || copy('.env.ci', '.env');"
        php artisan key:generate
    - name: Clear and Cache Config
      run: php artisan config:cache
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      run: vendor/bin/phpunit
    - name: Send Slack notification
      uses: 8398a7/action-slack@v2
      # if: failure()
      with:
          status: ${{ job.status }}
          author_name: ${{ github.actor }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        GITHUB_TOKEN: ${{ secrets.SLACK_GITHUB_TOKEN }}
